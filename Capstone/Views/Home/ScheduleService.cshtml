@model Capstone.Models.PendingAppointment

@{
    ViewData["Title"] = "ScheduleService";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>ScheduleService</h1>

<h4>PendingAppointment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <input type="hidden" asp-for="Latitude" />
        <input type="hidden" asp-for="Longitude" />

        <form asp-action="ChooseAppointmentTime">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StreetAddress" class="control-label"></label>
                <input asp-for="StreetAddress" class="form-control" />
                <span asp-validation-for="StreetAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="State" class="control-label"></label>
                <input asp-for="State" class="form-control" />
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Zip" class="control-label"></label>
                <input asp-for="Zip" class="form-control" />
                <span asp-validation-for="Zip" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PianoMake" class="control-label"></label>
                <input asp-for="PianoMake" class="form-control" />
                <span asp-validation-for="PianoMake" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PianoConfiguration" class="control-label"></label>
                <select asp-for="PianoConfiguration" asp-items="PianoConfigurations.Configurations">
                    <option value="">Choose One</option>
                </select>
                <span asp-validation-for="PianoConfiguration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Services" class="control-label"></label>
                <h4>Tuning Services:</h4>
                @foreach (var service in PianoServices.TuningServices)
                {
                    <br />
                    <input name="ChosenServices" type="radio" value="@service.Name" id="@service.Time">
                    <label class="form-check-label" for="@service.Name">
                        @service.Name
                    </label>
                }
                <br /><h4>Repair Services:</h4>
                @foreach (var service in PianoServices.RepairServices)
                {
                    <br />
                    <input name="ChosenServices" type="checkbox" value="@service.Name" id="@service.Time">
                    <label class="form-check-label" for="@service.Name">
                        @service.Name
                    </label>
                }
                <br /><h4>Cleaning Services:</h4>
                @foreach (var service in PianoServices.CleaningServices)
                {
                    <br />
                    <input name="ChosenServices" type="checkbox" value="@service.Name" id="@service.Time">
                    <label class="form-check-label" for="@service.Name">
                        @service.Name
                    </label>
                }
                <span asp-validation-for="Services" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerNotes" class="control-label"></label>
                <input asp-for="CustomerNotes" class="form-control" />
                <span asp-validation-for="CustomerNotes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ServicedBefore" class="control-label"></label>
                <input asp-for="ServicedBefore" class="form-control" />
                <span asp-validation-for="ServicedBefore" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PreferredAppointmentDate" class="control-label"></label>
                <input asp-for="PreferredAppointmentDate" class="form-control" />
                <span asp-validation-for="PreferredAppointmentDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Next" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Home</a>
</div>

<style>
    * {
        box-sizing: border-box;
    }

    body {
        background-color: #f1f1f1;
    }

    #regForm {
        background-color: #ffffff;
        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #4CAF50;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

        button:hover {
            opacity: 0.8;
        }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #4CAF50;
        }
</style>

<form id="regForm" action="/action_page.php">
    <h1>Schedule Your Appointment:</h1>
    <!-- One "tab" for each step in the form: -->
    <div class="tab" id="address">
        <p><input asp-for="StreetAddress" placeholder="Street Address" class="form-control" /></p>
        <span asp-validation-for="StreetAddress" class="text-danger"></span>

        <p><input asp-for="Zip" placeholder="Zip Code" class="form-control" /></p>
        <span asp-validation-for="Zip" class="text-danger"></span>

        <button type="button" onclick="populateMap(event)">Verify Address</button>
        <!--
        <p><input placeholder="First name..." oninput="this.className = ''" name="fname"></p>
        <p><input placeholder="Last name..." oninput="this.className = ''" name="lname"></p>
        -->
    </div>
    <div class="tab">
        Contact Info:
        <p><input placeholder="E-mail..." oninput="this.className = ''" name="email"></p>
        <p><input placeholder="Phone..." oninput="this.className = ''" name="phone"></p>
    </div>
    <div class="tab">
        Birthday:
        <p><input placeholder="dd" oninput="this.className = ''" name="dd"></p>
        <p><input placeholder="mm" oninput="this.className = ''" name="nn"></p>
        <p><input placeholder="yyyy" oninput="this.className = ''" name="yyyy"></p>
    </div>
    <div class="tab">
        Login Info:
        <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
        <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
    </div>
    <div style="overflow:auto;">
        <div style="float:right;">
            <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
            <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
        </div>
    </div>
    <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:40px;">
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
    </div>
</form>

<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
      // This function will display the specified tab of the form...
      var x = document.getElementsByClassName("tab");
      x[n].style.display = "block";
      //... and fix the Previous/Next buttons:
      if (n == 0) {
        document.getElementById("prevBtn").style.display = "none";
      } else {
        document.getElementById("prevBtn").style.display = "inline";
      }
      if (n == (x.length - 1)) {
        document.getElementById("nextBtn").innerHTML = "Submit";
      } else {
        document.getElementById("nextBtn").innerHTML = "Next";
      }
      //... and run a function that will display the correct step indicator:
      fixStepIndicator(n)
    }

    function nextPrev(n) {
      // This function will figure out which tab to display
      var x = document.getElementsByClassName("tab");
      // Exit the function if any field in the current tab is invalid:
      if (n == 1 && !validateForm()) return false;
      // Hide the current tab:
      x[currentTab].style.display = "none";
      // Increase or decrease the current tab by 1:
      currentTab = currentTab + n;
      // if you have reached the end of the form...
      if (currentTab >= x.length) {
        // ... the form gets submitted:
        document.getElementById("regForm").submit();
        return false;
      }
      // Otherwise, display the correct tab:
      showTab(currentTab);
    }

    function validateForm() {
      // This function deals with validation of the form fields
      var x, y, i, valid = true;
      x = document.getElementsByClassName("tab");
      y = x[currentTab].getElementsByTagName("input");
      // A loop that checks every input field in the current tab:
      for (i = 0; i < y.length; i++) {
        // If a field is empty...
        if (y[i].value == "") {
          // add an "invalid" class to the field:
          y[i].className += " invalid";
          // and set the current valid status to false
          valid = false;
        }
      }
      // If the valid status is true, mark the step as finished and valid:
      if (valid) {
        document.getElementsByClassName("step")[currentTab].className += " finish";
      }
      return valid; // return the valid status
    }

    function fixStepIndicator(n) {
      // This function removes the "active" class of all steps...
      var i, x = document.getElementsByClassName("step");
      for (i = 0; i < x.length; i++) {
        x[i].className = x[i].className.replace(" active", "");
      }
      //... and adds the "active" class on the current step:
      x[n].className += " active";
    }
</script>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
